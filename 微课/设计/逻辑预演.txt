验证数据库表
wk-users、
wk-mobiles、
wk-wx、
wk-mobiles-wx、
wk-orgs、
wk-org-rate、
wk-teachers、
wk-class、
wk-students、
wk-courses、
wk-orders
设计的合理性

场景：

注册
1. 新用户可以通过手机号和密码注册	✅
	+ 验证手机号是否有效 - 通过正则表达式
	+ 验证手机号运营商 - 通过运营商接口 (待定)
	+ 验证密码是否有效 - 不小于6位
	+ 验证昵称 - 不能为空
	+ 验证该手机号是否已经被注册过 - 查询wk-mobiles表
	+ 保存用户信息到wk-users表
	+ 保存登录信息到wk-mobiles表, userId外键关联wk-users相应表记录主键id
	+ 新用户要记录注册时间 - 更新wk-users表的register_date字段
	+ 新用户的过期时间为100年后的时间戳, 表示永不过期

2. 机构管理员可以录入老师、学生、家长的信息, 等同于被注册	✅
	+ 验证机构管理员录入老师、学生、家长的总数 - 查询wk-users表的inputCount字段, 超过500, 则禁止录入
	+ 验证录入的用户是否已经被注册 - 查询wk-mobiles表
	+ 如果用户已经被注册, 则查看用户是否在相应机构里, 如果不在, 则添加用户到相应机构 - 更新wk-users表的k-orgs字段
	+ 如果用户注册信息与机构管理员录入的信息冲突, 以用户注册信息为准
	+ 如果用户未被注册, 则开始进行 “新用户通过手机号和密码注册” 的逻辑
		+ 录入信息里不包含密码
		+ 录入成功后, 用户可以通过手机验证码登录
	+ 注册完成后, 如果录入的是老师, 则新增wk-teachers表记录; 如果录入的是学生, 则新增wk-students表记录
	+ 录入家长信息只有两种途径：
		+ 录入学生信息时绑定家长信息 - 更新wk-students表的parentId字段
		+ 录入学生信息完成后, 给学生添加家长信息 - 更新wk-students表的parentId字段
	+ 录入时一定要更新wk-users的roles字段

3. 老师可以录入学生、家长的信息, 等同于被注册 ✅

4. 角色 	✅
	+ 角色叠加 - 用户自己指定的角色、机构管理员和老师在录入信息时为用户指定的角色、用户接受邀请时被指定的角色 可以互相叠加
		+ 角色叠加只能在机构管理员、老师、家长间
		+ 学生与机构管理员、老师、家长之间都不能叠加角色
		+ 机构管理员 | 老师 	✅
		+ 机构管理员 | 家长 	✅
		+ 老师 | 家长 	✅
	+ 防止角色在学生与机构管理员、老师、家长之间叠加  ✅
		+ 用户在指定自己的角色是学生后, 不能再指定角色, 但可以删除角色
		+ 用户的角色是机构管理员、老师、家长时, 不能再指定自己的角色是学生
		+ 机构管理员和老师在录入学生信息时, 如果包含的手机号已经被录入且对应的角色是机构管理员、老师、家长, 则不能被录入. 此时需要提示用户 “该手机号已经被注册为机构管理员、老师、家长, 不能再作为学生手机号录入”
	+ 角色指定 - 用户可以为自己指定角色
		+ 指定单一角色 ✅
	+ 角色删除 - 用户可以删除被指定的角色 ✅

登录
1. 用户可以通过手机号和密码登录 ✅
2. 用户可以通过手机验证码登录	✅
	+ 验证手机号是否有效 - 通过正则表达式
	+ 下发验证码 - 更新该用户wk-mobiles表记录smscode字段
	+ 验证验证码 - 对比smscode与验证码
3. 用户可以通过微信登录  ✅
	+ 如果是新用户 - 新增wk-users、wk-wx表项, wk-wx表的userId字段外键连接wk-users相应表项主键
	+ 如果已经注册过 - 查询wk-wx表, 验证wx_unionid
4. 登录成功后, 如果用户的角色信息为空, 则弹窗让用户指定角色(机构管理员、老师、家长、学生)  ✅
	+ 如果指定角色为机构管理员
		+ wk-orgs表, 新增机构记录
		+ 更新wk-users表项的orgIds、roles字段
	+ 如果指定角色为老师
		+ wk-teachers表, 新增老师记录
		+ 更新wk-users表项的roles字段
	+ 如果指定角色为家长 - 更新wk-users表项的roles字段
	+ 如果指定角色为学生
		+ wk-students表, 新增学生记录
		+ 更新wk-users表项的roles字段
5. 绑定 	✅
	+ 绑定手机号 - 需要验证码校验
		+ 如果手机号未被注册 - wk-mobiles表, 新增记录, userId字段外键连接wk-users表相应记录主键
		+ 如果手机号已被注册
			+ 合并wk-wx表项与wk-mobiles表项在wk-users表中的记录
			+ 将新记录写入wk-users表
			+ 更新wk-wx表项与wk-mobiles表项的userId
			+ 删除wk-users旧表项
	+ 绑定微信登录 (同上)

邀请 - 仅限于角色信息中包含学生、家长; 以学生、家长的身份进行邀请操作
1. 学生邀请老师、家长  ✅
	+ 邀请老师 - 发邀请消息, 携带自己的userId、老师的unionId、邀请的roleId
		+ 老师已注册 
			+ 对方角色信息中不包含老师, 则忽略
			+ 老师同意后, 更新wk-teachers表项的studentIds字段
		+ 老师未注册 - 对方同意后
			+ 微信注册登录
			+ 新增wk-users、wk-wx、wk-teachers表记录;
			+ wk-users表记录的roles字段加入老师角色
			+ wk-teachers表记录的studentIds加入学生的id
2. 家长邀请老师 - 逻辑跟以上内容, 邀请消息还需要携带学生的userId  ✅

查询
1. 机构管理员
	+ 查询自己创建的所有机构  ✅
		+ 机构的名称、创建时间、logo、电话号码、地址、描述  ✅
	+ 查询自己创建机构的老师、学生、家长 (可通过手机号、姓名搜索)  ✅
		+ 老师的个人信息 - 姓名、性别、头像、手机号等  ✅
		+ 老师的课程信息 - 课程名称、总课时、已上课时、剩余课时、学生或班级信息
		+ 老师的排课信息 - 排课时间、课程名称、班级或学生信息、课程内容、预习内容
		+ 老师的授课记录 - 课程时间、课程名称、课程内容、课程反馈、班级或学生信息

		+ 学生的个人信息 - 姓名、性别、头像、手机号、住址、出生日期、学校、年级、标签等
		+ 学生的课程信息 - 课程名称、授课老师、已上课时、剩余课时、请假记录、缴费记录
		+ 学生的上课记录 - 课程时间、课程名称、课程内容、课程反馈、作业信息、授课老师
	+ 通过时间段查询自己创建机构的新增学生数
	+ 机构的在读学员数、消耗课时数(总数、时段数)、消耗金额(总数和时段数)
	+ 各老师的在读学员数、消耗课时数(总数、时段数)、消耗金额(总数和时段数)
	+ 账号的过期时间、缴费记录
2. 老师
	+ 查询自己所在的机构信息
	+ 查询自己的学生信息
	+ 查询自己的课程信息
	+ 查询自己的授课记录
	+ 查询自己的排课信息
	+ 账号的过期时间、缴费记录

3. 学生 | 家长
	+ 查询自己的课表
	+ 查询自己的课程信息
	+ 查询自己的上课记录
	+ 查询自己所在的机构信息
	+ 查询自己的老师信息

排课
1. 只有机构管理员、老师能够排课
	+ 选择时间段
	+ 选择班级
	+ 选择学生
		+ 如果学生不在自己的学生列表里
			+ 添加学生信息 - 如果学生没有手机号, 则使用家长手机号或绑定家长信息
		+ 如果学生在自己的学生列表里
			+ 在学生列表中选择
	+ 选择老师
		+ 如果是机构管理员排课, 则需要选择老师
			+ 如果老师没有关联到机构, 则添加老师信息
		+ 如果是老师排课, 则默认自己是授课老师
	+ 选择课程
		+ 如果只有一个相关课程, 则无需选择
		+ 如果有多个相关课程, 则需要选择
		+ 如果没有课程信息, 则需要添加课程信息


